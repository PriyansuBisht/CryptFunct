/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.cryptoProject.GUIFrames;


import java.awt.Color;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Priyansu
 */
public class VisualCryptographyDecryptFrame extends javax.swing.JFrame {

    /**
     * Creates new form TextEnDeFrame
     */
    public VisualCryptographyDecryptFrame() {
        initComponents();
    }

    javax.swing.ImageIcon home_Orange = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/home_Orange.png"));
    javax.swing.ImageIcon home_Black = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/home_Black.png"));
    javax.swing.ImageIcon encrypt_1 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_1.png"));
    javax.swing.ImageIcon encrypt_2 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_2.png"));
    javax.swing.ImageIcon encrypt_3 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_3.png"));
    javax.swing.ImageIcon encrypt_4 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_4.png"));
    javax.swing.ImageIcon refresh_Orange = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/refresh_orange.png"));
    javax.swing.ImageIcon refresh_Blue = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/refresh_blue.png"));
    javax.swing.ImageIcon upload_Image_Orange = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/upload_Image_Orange.png"));
    javax.swing.ImageIcon upload_Image_Black = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/upload_Image_Black.png"));
    javax.swing.ImageIcon decrypt_1 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/decrypt_1.png"));
    javax.swing.ImageIcon decrypt_2 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/decrypt_2.png"));
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basePanel_TextEnDe = new javax.swing.JPanel();
        cryptFunct_Label = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        DePanel_basePanel = new javax.swing.JPanel();
        selectImage_label = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        decrypt_button = new javax.swing.JButton();
        pathI_label = new javax.swing.JLabel();
        imageUpload_button = new javax.swing.JButton();
        keyUpload_button = new javax.swing.JButton();
        imageViewbox_label = new javax.swing.JLabel();
        keyViewBox_label = new javax.swing.JLabel();
        selectKey_label = new javax.swing.JLabel();
        pathK_label = new javax.swing.JLabel();
        imagePath_textbox = new javax.swing.JTextField();
        keyPath_textbox = new javax.swing.JTextField();
        encryption_label = new javax.swing.JLabel();
        decryption_label = new javax.swing.JLabel();
        home_button = new javax.swing.JButton();
        exit_button = new javax.swing.JButton();
        refresh_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CryptFunct - Text");
        setBackground(new java.awt.Color(25, 25, 25));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(230, 90));
        setMinimumSize(new java.awt.Dimension(929, 557));
        setName("textEnDeFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(929, 557));

        basePanel_TextEnDe.setVisible(true);
        basePanel_TextEnDe.setBackground(new java.awt.Color(25, 25, 25));
        basePanel_TextEnDe.setForeground(new java.awt.Color(204, 255, 255));
        basePanel_TextEnDe.setAlignmentX(0.0F);
        basePanel_TextEnDe.setAlignmentY(0.0F);
        basePanel_TextEnDe.setMaximumSize(new java.awt.Dimension(929, 557));
        basePanel_TextEnDe.setMinimumSize(new java.awt.Dimension(929, 557));
        basePanel_TextEnDe.setPreferredSize(new java.awt.Dimension(929, 557));

        cryptFunct_Label.setBackground(new java.awt.Color(25, 25, 25));
        cryptFunct_Label.setFont(new java.awt.Font("Pristina", 1, 48)); // NOI18N
        cryptFunct_Label.setForeground(new java.awt.Color(0, 255, 204));
        cryptFunct_Label.setText("Crypt Funct");
        cryptFunct_Label.setToolTipText("- Developed by PRIYANSU BISHT");
        cryptFunct_Label.setOpaque(true);

        jSeparator1.setBackground(new java.awt.Color(0, 255, 204));
        jSeparator1.setForeground(new java.awt.Color(0, 255, 204));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 204), 3, true));
        jSeparator1.setMaximumSize(new java.awt.Dimension(3, 440));
        jSeparator1.setMinimumSize(new java.awt.Dimension(3, 440));
        jSeparator1.setOpaque(true);
        jSeparator1.setPreferredSize(new java.awt.Dimension(3, 440));

        DePanel_basePanel.setBackground(new java.awt.Color(255, 153, 0));
        DePanel_basePanel.setPreferredSize(new java.awt.Dimension(825, 482));

        selectImage_label.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        selectImage_label.setForeground(new java.awt.Color(0, 255, 204));
        selectImage_label.setText("Select Share1 File");

        jLabel9.setBackground(new java.awt.Color(0, 255, 204));
        jLabel9.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(30, 30, 30));
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        decrypt_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/decrypt_1.png"))); // NOI18N
        decrypt_button.setBorder(null);
        decrypt_button.setContentAreaFilled(false);
        decrypt_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        decrypt_button.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        decrypt_button.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        decrypt_button.setIconTextGap(0);
        decrypt_button.setMaximumSize(new java.awt.Dimension(176, 53));
        decrypt_button.setMinimumSize(new java.awt.Dimension(176, 53));
        decrypt_button.setPreferredSize(new java.awt.Dimension(176, 53));
        decrypt_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                decrypt_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                decrypt_buttonMouseExited(evt);
            }
        });
        decrypt_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrypt_buttonActionPerformed(evt);
            }
        });

        pathI_label.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        pathI_label.setForeground(new java.awt.Color(0, 255, 204));
        pathI_label.setText("Path :");

        imageUpload_button.setFont(new java.awt.Font("Orbitron ExtraBold", 1, 18)); // NOI18N
        imageUpload_button.setText("UPOAD SHARE1");
        imageUpload_button.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 25, 25), 3, true));
        imageUpload_button.setContentAreaFilled(false);
        imageUpload_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        imageUpload_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageUpload_buttonActionPerformed(evt);
            }
        });

        keyUpload_button.setFont(new java.awt.Font("Orbitron ExtraBold", 1, 18)); // NOI18N
        keyUpload_button.setText("UPLOAD SHARE2");
        keyUpload_button.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 25, 25), 3, true));
        keyUpload_button.setContentAreaFilled(false);
        keyUpload_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        keyUpload_button.setMaximumSize(new java.awt.Dimension(263, 44));
        keyUpload_button.setMinimumSize(new java.awt.Dimension(263, 44));
        keyUpload_button.setPreferredSize(new java.awt.Dimension(263, 44));
        keyUpload_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keyUpload_buttonActionPerformed(evt);
            }
        });

        imageViewbox_label.setBackground(new java.awt.Color(255, 153, 0));
        imageViewbox_label.setFont(new java.awt.Font("Orbitron ExtraBold", 1, 48)); // NOI18N
        imageViewbox_label.setForeground(new java.awt.Color(0, 255, 204));
        imageViewbox_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageViewbox_label.setText("S H A R E 1");
        imageViewbox_label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 25, 25), 3));
        imageViewbox_label.setMaximumSize(new java.awt.Dimension(357, 332));
        imageViewbox_label.setMinimumSize(new java.awt.Dimension(357, 332));
        imageViewbox_label.setPreferredSize(new java.awt.Dimension(357, 332));

        keyViewBox_label.setBackground(new java.awt.Color(255, 153, 0));
        keyViewBox_label.setFont(new java.awt.Font("Orbitron ExtraBold", 1, 48)); // NOI18N
        keyViewBox_label.setForeground(new java.awt.Color(0, 255, 204));
        keyViewBox_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        keyViewBox_label.setText("S H A R E 2");
        keyViewBox_label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(25, 25, 25), 3));
        keyViewBox_label.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        keyViewBox_label.setMaximumSize(new java.awt.Dimension(357, 332));
        keyViewBox_label.setMinimumSize(new java.awt.Dimension(357, 332));
        keyViewBox_label.setPreferredSize(new java.awt.Dimension(357, 332));

        selectKey_label.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        selectKey_label.setForeground(new java.awt.Color(0, 255, 204));
        selectKey_label.setText("Select Share2 File");

        pathK_label.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        pathK_label.setForeground(new java.awt.Color(0, 255, 204));
        pathK_label.setText("Path :");

        imagePath_textbox.setEditable(false);
        imagePath_textbox.setBackground(new java.awt.Color(255, 153, 0));
        imagePath_textbox.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 2, 12)); // NOI18N
        imagePath_textbox.setForeground(new java.awt.Color(204, 0, 204));
        imagePath_textbox.setText("Image Path.....");
        imagePath_textbox.setBorder(null);
        imagePath_textbox.setMaximumSize(new java.awt.Dimension(294, 24));
        imagePath_textbox.setMinimumSize(new java.awt.Dimension(294, 24));
        imagePath_textbox.setOpaque(false);
        imagePath_textbox.setPreferredSize(new java.awt.Dimension(294, 24));

        keyPath_textbox.setEditable(false);
        keyPath_textbox.setBackground(new java.awt.Color(255, 153, 0));
        keyPath_textbox.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 2, 12)); // NOI18N
        keyPath_textbox.setForeground(new java.awt.Color(204, 0, 204));
        keyPath_textbox.setText("Key Path.....");
        keyPath_textbox.setBorder(null);
        keyPath_textbox.setMaximumSize(new java.awt.Dimension(294, 24));
        keyPath_textbox.setMinimumSize(new java.awt.Dimension(294, 24));
        keyPath_textbox.setOpaque(false);
        keyPath_textbox.setPreferredSize(new java.awt.Dimension(294, 24));

        javax.swing.GroupLayout DePanel_basePanelLayout = new javax.swing.GroupLayout(DePanel_basePanel);
        DePanel_basePanel.setLayout(DePanel_basePanelLayout);
        DePanel_basePanelLayout.setHorizontalGroup(
            DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DePanel_basePanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(DePanel_basePanelLayout.createSequentialGroup()
                        .addComponent(imageUpload_button, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(decrypt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(keyUpload_button, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DePanel_basePanelLayout.createSequentialGroup()
                        .addGroup(DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DePanel_basePanelLayout.createSequentialGroup()
                                .addComponent(imageViewbox_label, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE))
                            .addGroup(DePanel_basePanelLayout.createSequentialGroup()
                                .addComponent(pathI_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(imagePath_textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24)))
                        .addGroup(DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(DePanel_basePanelLayout.createSequentialGroup()
                                .addComponent(pathK_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)
                                .addComponent(keyPath_textbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(keyViewBox_label, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, DePanel_basePanelLayout.createSequentialGroup()
                        .addComponent(selectImage_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(selectKey_label, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addGap(18, 18, 18)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 5, Short.MAX_VALUE)
                .addContainerGap())
        );
        DePanel_basePanelLayout.setVerticalGroup(
            DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DePanel_basePanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectKey_label, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectImage_label, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(imagePath_textbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pathI_label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(keyPath_textbox, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(pathK_label)))
                .addGroup(DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DePanel_basePanelLayout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DePanel_basePanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(imageViewbox_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(keyViewBox_label, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(DePanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(keyUpload_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imageUpload_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decrypt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        encryption_label.setBackground(new java.awt.Color(0, 255, 204));
        encryption_label.setFont(new java.awt.Font("Orbitron", 1, 24)); // NOI18N
        encryption_label.setForeground(new java.awt.Color(255, 153, 0));
        encryption_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        encryption_label.setText("ENCRYPTION");
        encryption_label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        encryption_label.setOpaque(true);
        encryption_label.setPreferredSize(new java.awt.Dimension(270, 75));
        encryption_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                encryption_labelMouseClicked(evt);
            }
        });

        decryption_label.setBackground(new java.awt.Color(255, 153, 0));
        decryption_label.setFont(new java.awt.Font("Orbitron", 1, 24)); // NOI18N
        decryption_label.setForeground(new java.awt.Color(0, 255, 204));
        decryption_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        decryption_label.setText("DECRYPTION");
        decryption_label.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        decryption_label.setOpaque(true);
        decryption_label.setPreferredSize(new java.awt.Dimension(270, 75));

        home_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/home_Black.png"))); // NOI18N
        home_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home_button.setMaximumSize(new java.awt.Dimension(44, 44));
        home_button.setMinimumSize(new java.awt.Dimension(44, 44));
        home_button.setPreferredSize(new java.awt.Dimension(44, 44));
        home_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                home_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                home_buttonMouseExited(evt);
            }
        });
        home_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_buttonActionPerformed(evt);
            }
        });

        exit_button.setBackground(new java.awt.Color(25, 25, 25));
        exit_button.setForeground(new java.awt.Color(25, 25, 25));
        exit_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/cross_darkgray.png"))); // NOI18N
        exit_button.setToolTipText("EXIT");
        exit_button.setBorder(null);
        exit_button.setContentAreaFilled(false);
        exit_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit_button.setPreferredSize(new java.awt.Dimension(82, 75));
        exit_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit_buttonMouseExited(evt);
            }
        });
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });

        refresh_button.setBackground(new java.awt.Color(25, 25, 25));
        refresh_button.setForeground(new java.awt.Color(25, 25, 25));
        refresh_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/refresh_blue.png"))); // NOI18N
        refresh_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refresh_button.setIconTextGap(0);
        refresh_button.setMaximumSize(new java.awt.Dimension(44, 44));
        refresh_button.setMinimumSize(new java.awt.Dimension(44, 44));
        refresh_button.setPreferredSize(new java.awt.Dimension(44, 44));
        refresh_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_buttonMouseExited(evt);
            }
        });
        refresh_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout basePanel_TextEnDeLayout = new javax.swing.GroupLayout(basePanel_TextEnDe);
        basePanel_TextEnDe.setLayout(basePanel_TextEnDeLayout);
        basePanel_TextEnDeLayout.setHorizontalGroup(
            basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(home_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refresh_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(DePanel_basePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 809, Short.MAX_VALUE))
                    .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(cryptFunct_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(decryption_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(encryption_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, 0))
        );
        basePanel_TextEnDeLayout.setVerticalGroup(
            basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(cryptFunct_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basePanel_TextEnDeLayout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(decryption_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(encryption_label, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                            .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basePanel_TextEnDeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(DePanel_basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(home_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refresh_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel_TextEnDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel_TextEnDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void home_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_buttonActionPerformed
        // TODO add your handling code here:
        com.cryptoProject.GUIFrames.HomeFrame homeFrame = new com.cryptoProject.GUIFrames.HomeFrame();
        homeFrame.setVisible(true);
        VisualCryptographyDecryptFrame.this.dispose();
    }//GEN-LAST:event_home_buttonActionPerformed

    private void home_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_buttonMouseExited
        // TODO add your handling code here:
        home_button.setIcon(home_Black);
    }//GEN-LAST:event_home_buttonMouseExited

    private void home_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_buttonMouseEntered
        // TODO add your handling code here:
        home_button.setIcon(home_Orange);
    }//GEN-LAST:event_home_buttonMouseEntered

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        // TODO add your handling code here:
        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Cross_gray.png"));
        int res = javax.swing.JOptionPane.showConfirmDialog(null, "Do you want to Exit ? ", "ALERT !!!", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, icon);
        if(res == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void refresh_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonMouseEntered
        // TODO add your handling code here:
        refresh_button.setIcon(refresh_Orange);
    }//GEN-LAST:event_refresh_buttonMouseEntered

    private void refresh_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonMouseExited
        // TODO add your handling code here:
        refresh_button.setIcon(refresh_Blue);
    }//GEN-LAST:event_refresh_buttonMouseExited

    private void refresh_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_buttonActionPerformed
        // TODO add your handling code here:
        com.cryptoProject.GUIFrames.VisualCryptographyDecryptFrame visualCryptographyDecryptFrame = new com.cryptoProject.GUIFrames.VisualCryptographyDecryptFrame();
        visualCryptographyDecryptFrame.setVisible(true);
        VisualCryptographyDecryptFrame.this.dispose();
    }//GEN-LAST:event_refresh_buttonActionPerformed
          
    private void decrypt_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decrypt_buttonMouseEntered
        // TODO add your handling code here:
        decrypt_button.setIcon( decrypt_2);
    }//GEN-LAST:event_decrypt_buttonMouseEntered

    private void decrypt_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decrypt_buttonMouseExited
        // TODO add your handling code here:
        decrypt_button.setIcon( decrypt_1);
    }//GEN-LAST:event_decrypt_buttonMouseExited

    private void decrypt_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrypt_buttonActionPerformed
        // TODO add your handling code here:
        if (keyFile == null || !keyFile.exists() || imageFile == null || !imageFile.exists()) {
            JOptionPane.showMessageDialog(this, "File not found", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }

        BufferedImage keyImageBW = com.cryptoProject.GUIFrames.VisualCryptogrphyFunctions.loadAndCheckEncrFile(keyFile);
        BufferedImage encryptedImageBW = com.cryptoProject.GUIFrames.VisualCryptogrphyFunctions.loadAndCheckEncrFile(imageFile);
        if ( keyImageBW == null ) {
            JOptionPane.showMessageDialog(this, keyFile.getName() + " is not a valid key file", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (encryptedImageBW == null) {
                JOptionPane.showMessageDialog(this, imageFile.getName() + " is not an encrypted image", "ERROR", JOptionPane.ERROR_MESSAGE);
                return;
        }

        overlayImage = com.cryptoProject.GUIFrames.VisualCryptogrphyFunctions.overlayImages(keyImageBW, encryptedImageBW);
        orignalImage = com.cryptoProject.GUIFrames.VisualCryptogrphyFunctions.decryptImage(overlayImage);
        if (overlayImage == null || orignalImage == null) {
            JOptionPane.showMessageDialog(this, "Decryption failed - key and encrypted image not the same size?", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Image Decrypted Sucessfully...   ", "RESULT", JOptionPane.INFORMATION_MESSAGE);
            buttonIndex = 1;
            imageUpload_button.setText("DOWNLOAD ORIGNAL");
            keyUpload_button.setText("DOWNLOAD OVERLAY");
            decrypt_button.setVisible(false);
            selectImage_label.setText("  ");
            selectKey_label.setText("   ");
            pathI_label.setText("ORIGNAL IMAGE");
            pathK_label.setText("OVERLAY IMAGE");
            imagePath_textbox.setVisible(false);
            keyPath_textbox.setVisible(false);
            
            // ORIGNAL
            ImageIcon unscaledImage = new ImageIcon(orignalImage);
            java.awt.Image image1 = unscaledImage.getImage();
            java.awt.Image image2 = image1.getScaledInstance(imageViewbox_label.getWidth(), imageViewbox_label.getHeight(), java.awt.Image.SCALE_SMOOTH);
            scaledImage = new ImageIcon( image2 );
            imageViewbox_label.setText(null);
            imageViewbox_label.setIcon(scaledImage);
            
            //OVERLAY
            ImageIcon unscaledKey = new ImageIcon(overlayImage);
            java.awt.Image key1 = unscaledKey.getImage();
            java.awt.Image key2 = key1.getScaledInstance(keyViewBox_label.getWidth(), keyViewBox_label.getHeight(), java.awt.Image.SCALE_SMOOTH);
            scaledKey = new ImageIcon( key2 );
            keyViewBox_label.setText(null);
            keyViewBox_label.setIcon(scaledKey);
        }
    }//GEN-LAST:event_decrypt_buttonActionPerformed

    private void imageUpload_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageUpload_buttonActionPerformed
        // TODO add your handling code here:
         if( buttonIndex == 0 ) {
            javax.swing.JFileChooser chooseImage = new javax.swing.JFileChooser();
            chooseImage.setCurrentDirectory(new File("user.dir"));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG Files", "png");
            chooseImage.addChoosableFileFilter(filter);
            chooseImage.setFileFilter(filter);
            int result = chooseImage.showOpenDialog(null);
            if( result == JFileChooser.APPROVE_OPTION) {
                //Display
                if ( ! chooseImage.getSelectedFile().getName().endsWith(".png")) return;
                imagePath_textbox.setText(chooseImage.getSelectedFile().getAbsolutePath());
                ImageIcon unscaledImage = new ImageIcon(chooseImage.getSelectedFile().getAbsolutePath());
                java.awt.Image image1 = unscaledImage.getImage();
                java.awt.Image image2 = image1.getScaledInstance(imageViewbox_label.getWidth(), imageViewbox_label.getHeight(), java.awt.Image.SCALE_SMOOTH);
                scaledImage = new ImageIcon( image2 );
                imageViewbox_label.setText(null);
                imageViewbox_label.setOpaque(true);
                imageViewbox_label.setBackground(Color.WHITE);
                imageViewbox_label.setIcon(scaledImage);
                //Work
                imageFile = chooseImage.getSelectedFile();
            }
        } else {
            if (orignalImage == null) return;
            JFileChooser saveImage = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.png", "png");
            saveImage.setFileFilter(filter);
            int result = saveImage.showSaveDialog(null); 
            if(  result == JFileChooser.APPROVE_OPTION) {
                File fileName = saveImage.getSelectedFile();
                if( !fileName.toString().endsWith(".png") ) {
                    fileName = new File(fileName.toString() + ".png");
                }
                try {
                    ImageIO.write(orignalImage, "png", fileName);
                } catch (IOException ex) {
                    Logger.getLogger(VisualCryptographyEncryptFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_imageUpload_buttonActionPerformed

    private void keyUpload_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keyUpload_buttonActionPerformed
        // TODO add your handling code here:
        if( buttonIndex == 0 ) {
            javax.swing.JFileChooser chooseKey = new javax.swing.JFileChooser();
            chooseKey.setCurrentDirectory(new File("user.dir"));
            FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG Files", "png");
            chooseKey.addChoosableFileFilter(filter);
            chooseKey.setFileFilter(filter);
            int result = chooseKey.showOpenDialog(null);
            if( result == JFileChooser.APPROVE_OPTION) {
                //Display
                 if ( ! chooseKey.getSelectedFile().getName().endsWith(".png")) return;
                keyPath_textbox.setText(chooseKey.getSelectedFile().getAbsolutePath());
                ImageIcon unscaledKey = new ImageIcon(chooseKey.getSelectedFile().getAbsolutePath());
                java.awt.Image key1 = unscaledKey.getImage();
                java.awt.Image key2 = key1.getScaledInstance(keyViewBox_label.getWidth(), keyViewBox_label.getHeight(), java.awt.Image.SCALE_SMOOTH);
                scaledKey = new ImageIcon( key2 );
                keyViewBox_label.setText(null);
                keyViewBox_label.setOpaque(true);
                keyViewBox_label.setBackground(Color.WHITE);
                keyViewBox_label.setIcon(scaledKey);

                //Work
                keyFile = chooseKey.getSelectedFile();
            }
        } else {
            if (overlayImage == null) return;
            JFileChooser saveImage = new JFileChooser();
            FileNameExtensionFilter filter = new FileNameExtensionFilter("*.png", "png");
            saveImage.setFileFilter(filter);
            int result = saveImage.showSaveDialog(null); 
            if(  result == JFileChooser.APPROVE_OPTION) {
                File fileName = saveImage.getSelectedFile();
                if( !fileName.toString().endsWith(".png") ) {
                    fileName = new File(fileName.toString() + ".png");
                }
                try {
                    ImageIO.write(overlayImage, "png", fileName);
                } catch (IOException ex) {
                    Logger.getLogger(VisualCryptographyEncryptFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }           
        }
    }//GEN-LAST:event_keyUpload_buttonActionPerformed

    private void encryption_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encryption_labelMouseClicked
        // TODO add your handling code here:
        com.cryptoProject.GUIFrames.VisualCryptographyEncryptFrame visualCryptographyEncryptFrame = new com.cryptoProject.GUIFrames.VisualCryptographyEncryptFrame();
        visualCryptographyEncryptFrame.setVisible(true);
        VisualCryptographyDecryptFrame.this.dispose();        
    }//GEN-LAST:event_encryption_labelMouseClicked

    private void exit_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_buttonMouseEntered
        // TODO add your handling code here:
        exit_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 5));
    }//GEN-LAST:event_exit_buttonMouseEntered

    private void exit_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_buttonMouseExited
        // TODO add your handling code here:
        exit_button.setBorder(null);
    }//GEN-LAST:event_exit_buttonMouseExited
   
    
/* *
     * //<editor-fold defaultstate="collapsed" desc=" Main meathod ">
        public static void main(String args[]) {
        
        // Look & Feel setting code 
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(FileEnDeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(FileEnDeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(FileEnDeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(FileEnDeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
           }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextEnDeFrame().setVisible(true);
            }
        });
        * 
        * */
//</editor-fold>

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DePanel_basePanel;
    private javax.swing.JPanel basePanel_TextEnDe;
    private javax.swing.JLabel cryptFunct_Label;
    private javax.swing.JButton decrypt_button;
    private javax.swing.JLabel decryption_label;
    private javax.swing.JLabel encryption_label;
    private javax.swing.JButton exit_button;
    private javax.swing.JButton home_button;
    private javax.swing.JTextField imagePath_textbox;
    private javax.swing.JButton imageUpload_button;
    private javax.swing.JLabel imageViewbox_label;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField keyPath_textbox;
    private javax.swing.JButton keyUpload_button;
    private javax.swing.JLabel keyViewBox_label;
    private javax.swing.JLabel pathI_label;
    private javax.swing.JLabel pathK_label;
    private javax.swing.JButton refresh_button;
    private javax.swing.JLabel selectImage_label;
    private javax.swing.JLabel selectKey_label;
    // End of variables declaration//GEN-END:variables
    private ImageIcon scaledImage = null;
    private ImageIcon scaledKey = null;
    private java.io.File imageFile = null;
    private java.io.File keyFile = null;
    private java.awt.image.BufferedImage orignalImage = null;
    private java.awt.image.BufferedImage overlayImage = null;
    private int buttonIndex = 0;
}
