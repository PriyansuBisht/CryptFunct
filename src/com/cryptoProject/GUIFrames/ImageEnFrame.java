/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package com.cryptoProject.GUIFrames;

import java.io.File;
import java.io.IOException;
import java.security.InvalidAlgorithmParameterException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Priyansu
 */
public class ImageEnFrame extends javax.swing.JFrame {

    /**
     * Creates new form TextEnDeFrame
     */
    public ImageEnFrame() {
        initComponents();
    }

    javax.swing.ImageIcon home_Orange = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/home_Orange.png"));
    javax.swing.ImageIcon home_Black = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/home_Black.png"));
    javax.swing.ImageIcon encrypt_1 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_1.png"));
    javax.swing.ImageIcon encrypt_2 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_2.png"));
    javax.swing.ImageIcon encrypt_3 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_3.png"));
    javax.swing.ImageIcon encrypt_4 = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_4.png"));
    javax.swing.ImageIcon refresh_Orange = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/refresh_orange.png"));
    javax.swing.ImageIcon refresh_Blue = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/refresh_blue.png"));
    javax.swing.ImageIcon upload_Image_Orange = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/upload_Image_Orange.png"));
    javax.swing.ImageIcon upload_Image_Black = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/upload_Image_Black.png"));   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        basePanel_TextEnDe = new javax.swing.JPanel();
        cryptFunct_Label = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        EnPanel_basePanel = new javax.swing.JPanel();
        text_label = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        encrypt_button = new javax.swing.JButton();
        uploadImage_buttton = new javax.swing.JButton();
        imagePath_label = new javax.swing.JLabel();
        path_label = new javax.swing.JLabel();
        imageBox_label = new javax.swing.JLabel();
        downloadImage_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel1.setVisible(false);
        jTextField1 = new javax.swing.JTextField();
        jTextField1.setVisible(false);
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        encryption_label = new javax.swing.JLabel();
        decryption_label = new javax.swing.JLabel();
        home_button = new javax.swing.JButton();
        exit_button = new javax.swing.JButton();
        refresh_button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CryptFunct - Text");
        setBackground(new java.awt.Color(25, 25, 25));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(230, 90));
        setMinimumSize(new java.awt.Dimension(929, 557));
        setName("textEnDeFrame"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(929, 557));

        basePanel_TextEnDe.setVisible(true);
        basePanel_TextEnDe.setBackground(new java.awt.Color(25, 25, 25));
        basePanel_TextEnDe.setForeground(new java.awt.Color(204, 255, 255));
        basePanel_TextEnDe.setAlignmentX(0.0F);
        basePanel_TextEnDe.setAlignmentY(0.0F);
        basePanel_TextEnDe.setMaximumSize(new java.awt.Dimension(929, 557));
        basePanel_TextEnDe.setMinimumSize(new java.awt.Dimension(929, 557));
        basePanel_TextEnDe.setPreferredSize(new java.awt.Dimension(929, 557));

        cryptFunct_Label.setBackground(new java.awt.Color(25, 25, 25));
        cryptFunct_Label.setFont(new java.awt.Font("Pristina", 1, 48)); // NOI18N
        cryptFunct_Label.setForeground(new java.awt.Color(0, 255, 204));
        cryptFunct_Label.setText("Crypt Funct");
        cryptFunct_Label.setToolTipText("- Developed by PRIYANSU BISHT");
        cryptFunct_Label.setOpaque(true);

        jSeparator1.setBackground(new java.awt.Color(0, 255, 204));
        jSeparator1.setForeground(new java.awt.Color(0, 255, 204));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 255, 204), 3, true));
        jSeparator1.setMaximumSize(new java.awt.Dimension(3, 440));
        jSeparator1.setMinimumSize(new java.awt.Dimension(3, 440));
        jSeparator1.setOpaque(true);
        jSeparator1.setPreferredSize(new java.awt.Dimension(3, 440));

        EnPanel_basePanel.setBackground(new java.awt.Color(0, 255, 204));
        EnPanel_basePanel.setPreferredSize(new java.awt.Dimension(825, 482));

        text_label.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        text_label.setForeground(new java.awt.Color(255, 153, 0));
        text_label.setText("Select Image to be Encrypted.....");

        jLabel8.setBackground(new java.awt.Color(0, 255, 204));
        jLabel8.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(30, 30, 30));
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        encrypt_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/encrypt_3.png"))); // NOI18N
        encrypt_button.setBorder(null);
        encrypt_button.setContentAreaFilled(false);
        encrypt_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        encrypt_button.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        encrypt_button.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        encrypt_button.setIconTextGap(0);
        encrypt_button.setMaximumSize(new java.awt.Dimension(200, 80));
        encrypt_button.setMinimumSize(new java.awt.Dimension(200, 80));
        encrypt_button.setPreferredSize(new java.awt.Dimension(151, 70));
        encrypt_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                encrypt_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                encrypt_buttonMouseExited(evt);
            }
        });
        encrypt_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encrypt_buttonActionPerformed(evt);
            }
        });

        uploadImage_buttton.setIcon(new javax.swing.ImageIcon("C:\\Users\\user\\Desktop\\GUIJava\\MiniProjectSem5\\cryptFunct\\src\\Resources\\Icons\\upload_image_black.png")); // NOI18N
        uploadImage_buttton.setToolTipText("UPLOAD IMAGE");
        uploadImage_buttton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        uploadImage_buttton.setMaximumSize(new java.awt.Dimension(90, 80));
        uploadImage_buttton.setMinimumSize(new java.awt.Dimension(90, 80));
        uploadImage_buttton.setPreferredSize(new java.awt.Dimension(90, 80));
        uploadImage_buttton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                uploadImage_butttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                uploadImage_butttonMouseExited(evt);
            }
        });
        uploadImage_buttton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadImage_butttonActionPerformed(evt);
            }
        });

        imagePath_label.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 2, 12)); // NOI18N
        imagePath_label.setForeground(new java.awt.Color(204, 0, 204));
        imagePath_label.setText("Selected File Path");

        path_label.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        path_label.setForeground(new java.awt.Color(255, 153, 0));
        path_label.setText("Path :");

        imageBox_label.setSize(701, 253);
        imageBox_label.setFont(new java.awt.Font("Orbitron ExtraBold", 0, 48)); // NOI18N
        imageBox_label.setForeground(new java.awt.Color(255, 153, 0));
        imageBox_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageBox_label.setText("I M A G E");
        imageBox_label.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 25, 25), 3, true));
        imageBox_label.setMaximumSize(new java.awt.Dimension(701, 253));
        imageBox_label.setMinimumSize(new java.awt.Dimension(701, 253));
        imageBox_label.setPreferredSize(new java.awt.Dimension(701, 253));

        downloadImage_button.setFont(new java.awt.Font("Orbitron ExtraBold", 1, 18)); // NOI18N
        downloadImage_button.setText("DOWNLOAD IMAGE");
        downloadImage_button.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(25, 25, 25), 3, true));
        downloadImage_button.setContentAreaFilled(false);
        downloadImage_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        downloadImage_button.setVisible(false);
        downloadImage_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadImage_buttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Key :");
        jLabel1.setMaximumSize(new java.awt.Dimension(44, 53));
        jLabel1.setMinimumSize(new java.awt.Dimension(44, 53));
        jLabel1.setPreferredSize(new java.awt.Dimension(44, 53));

        jTextField1.setBackground(new java.awt.Color(0, 245, 234));
        jTextField1.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 0));
        jLabel2.setText("Key Size :");

        jComboBox1.setBackground(new java.awt.Color(0, 255, 204));
        jComboBox1.setFont(new java.awt.Font("Montserrat Alternates SemiBold", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "64 Bytes", "128 Bytes", "256 Bytes" }));
        jComboBox1.setSelectedIndex(2);
        jComboBox1.setMaximumSize(new java.awt.Dimension(130, 30));
        jComboBox1.setMinimumSize(new java.awt.Dimension(130, 30));
        jComboBox1.setOpaque(false);
        jComboBox1.setPreferredSize(new java.awt.Dimension(130, 30));

        javax.swing.GroupLayout EnPanel_basePanelLayout = new javax.swing.GroupLayout(EnPanel_basePanel);
        EnPanel_basePanel.setLayout(EnPanel_basePanelLayout);
        EnPanel_basePanelLayout.setHorizontalGroup(
            EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EnPanel_basePanelLayout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(uploadImage_buttton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                                .addComponent(path_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(imagePath_label, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(text_label, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(encrypt_button, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EnPanel_basePanelLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(imageBox_label, javax.swing.GroupLayout.PREFERRED_SIZE, 699, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                                .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jTextField1))
                                    .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(10, 10, 10)
                                .addComponent(downloadImage_button, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );
        EnPanel_basePanelLayout.setVerticalGroup(
            EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                        .addComponent(text_label, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(imagePath_label, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(path_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(encrypt_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(uploadImage_buttton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                        .addGap(263, 263, 263)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 3, Short.MAX_VALUE))
                    .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(imageBox_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(downloadImage_button, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                    .addGroup(EnPanel_basePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(EnPanel_basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19))
        );

        encryption_label.setBackground(new java.awt.Color(0, 255, 204));
        encryption_label.setFont(new java.awt.Font("Orbitron", 1, 24)); // NOI18N
        encryption_label.setForeground(new java.awt.Color(255, 153, 0));
        encryption_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        encryption_label.setText("ENCRYPTION");
        encryption_label.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        encryption_label.setOpaque(true);
        encryption_label.setPreferredSize(new java.awt.Dimension(270, 75));

        decryption_label.setBackground(new java.awt.Color(255, 153, 0));
        decryption_label.setFont(new java.awt.Font("Orbitron", 1, 24)); // NOI18N
        decryption_label.setForeground(new java.awt.Color(0, 255, 204));
        decryption_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        decryption_label.setText("DECRYPTION");
        decryption_label.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        decryption_label.setOpaque(true);
        decryption_label.setPreferredSize(new java.awt.Dimension(270, 75));
        decryption_label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                decryption_labelMouseClicked(evt);
            }
        });

        home_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/home_Black.png"))); // NOI18N
        home_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home_button.setMaximumSize(new java.awt.Dimension(44, 44));
        home_button.setMinimumSize(new java.awt.Dimension(44, 44));
        home_button.setPreferredSize(new java.awt.Dimension(44, 44));
        home_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                home_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                home_buttonMouseExited(evt);
            }
        });
        home_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_buttonActionPerformed(evt);
            }
        });

        exit_button.setBackground(new java.awt.Color(25, 25, 25));
        exit_button.setForeground(new java.awt.Color(25, 25, 25));
        exit_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/cross_darkgray.png"))); // NOI18N
        exit_button.setToolTipText("EXIT");
        exit_button.setBorder(null);
        exit_button.setContentAreaFilled(false);
        exit_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exit_button.setPreferredSize(new java.awt.Dimension(82, 75));
        exit_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                exit_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                exit_buttonMouseExited(evt);
            }
        });
        exit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_buttonActionPerformed(evt);
            }
        });

        refresh_button.setBackground(new java.awt.Color(25, 25, 25));
        refresh_button.setForeground(new java.awt.Color(25, 25, 25));
        refresh_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/refresh_blue.png"))); // NOI18N
        refresh_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        refresh_button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        refresh_button.setIconTextGap(0);
        refresh_button.setMaximumSize(new java.awt.Dimension(44, 44));
        refresh_button.setMinimumSize(new java.awt.Dimension(44, 44));
        refresh_button.setPreferredSize(new java.awt.Dimension(44, 44));
        refresh_button.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                refresh_buttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                refresh_buttonMouseExited(evt);
            }
        });
        refresh_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refresh_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout basePanel_TextEnDeLayout = new javax.swing.GroupLayout(basePanel_TextEnDe);
        basePanel_TextEnDe.setLayout(basePanel_TextEnDeLayout);
        basePanel_TextEnDeLayout.setHorizontalGroup(
            basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                        .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(home_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(refresh_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(EnPanel_basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 809, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                        .addComponent(cryptFunct_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(decryption_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(encryption_label, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        basePanel_TextEnDeLayout.setVerticalGroup(
            basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basePanel_TextEnDeLayout.createSequentialGroup()
                .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basePanel_TextEnDeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(decryption_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(encryption_label, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                        .addComponent(exit_button, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(EnPanel_basePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basePanel_TextEnDeLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(cryptFunct_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(basePanel_TextEnDeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(basePanel_TextEnDeLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(home_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refresh_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(119, 119, 119))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel_TextEnDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(basePanel_TextEnDe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void home_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_buttonActionPerformed
        // TODO add your handling code here:
        com.cryptoProject.GUIFrames.HomeFrame homeFrame = new com.cryptoProject.GUIFrames.HomeFrame();
        homeFrame.setVisible(true);
        ImageEnFrame.this.dispose();
    }//GEN-LAST:event_home_buttonActionPerformed

    private void home_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_buttonMouseExited
        // TODO add your handling code here:
        home_button.setIcon(home_Black);
    }//GEN-LAST:event_home_buttonMouseExited

    private void home_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_home_buttonMouseEntered
        // TODO add your handling code here:
        home_button.setIcon(home_Orange);
    }//GEN-LAST:event_home_buttonMouseEntered

    private void exit_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_buttonActionPerformed
        // TODO add your handling code here:
        javax.swing.ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/Resources/Icons/Cross_gray.png"));
        int res = javax.swing.JOptionPane.showConfirmDialog(null, "Do you want to Exit ? ", "ALERT !!!", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE, icon);
        if(res == 0) {
            System.exit(0);
        }
    }//GEN-LAST:event_exit_buttonActionPerformed

    private void encrypt_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encrypt_buttonMouseEntered
        // TODO add your handling code here:
        encrypt_button.setIcon(encrypt_4);
    }//GEN-LAST:event_encrypt_buttonMouseEntered

    private void encrypt_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_encrypt_buttonMouseExited
        // TODO add your handling code here:
        encrypt_button.setIcon(encrypt_3);
    }//GEN-LAST:event_encrypt_buttonMouseExited

    private void encrypt_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encrypt_buttonActionPerformed
        // TODO add your handling code here:
        if (imageFile == null || !imageFile.exists() ) {
            JOptionPane.showMessageDialog(this, "File not found", "ERROR", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int index = jComboBox1.getItemCount();
        size = switch (index) {
            case 0 -> 64;
            case 1 -> 128;
            default -> 256;
        };
        
        try {
            secretKey = com.cryptoProject.FunctionalClasses.FileEnDeFunctions.generateKey(size);
            
            byte[] iv = new byte[16];
            java.io.DataInputStream readIV;
            readIV = new java.io.DataInputStream( new java.io.FileInputStream( new java.io.File("/Users/user/Desktop/GUIJava/MiniProjectSem5/cryptFunct/src/Resources/Temp/IVFile")));
            readIV.readFully(iv);
            readIV.close();
            IV = new javax.crypto.spec.IvParameterSpec(iv);
            com.cryptoProject.FunctionalClasses.FileEnDeFunctions.encryptFile("AES/CBC/PKCS5Padding", secretKey, IV, imageFile, encryptedFile);
        } catch (NoSuchAlgorithmException | IOException | NoSuchPaddingException | InvalidAlgorithmParameterException | InvalidKeyException | BadPaddingException | IllegalBlockSizeException ex) {
            Logger.getLogger(ImageEnFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if( encryptImage != null ) {
            JOptionPane.showMessageDialog(this, "Encryption Successful...   ", "RESULT", JOptionPane.INFORMATION_MESSAGE);
        }
            
    }//GEN-LAST:event_encrypt_buttonActionPerformed

    private void refresh_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonMouseEntered
        // TODO add your handling code here:
        refresh_button.setIcon(refresh_Orange);
    }//GEN-LAST:event_refresh_buttonMouseEntered

    private void refresh_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refresh_buttonMouseExited
        // TODO add your handling code here:
        refresh_button.setIcon(refresh_Blue);
    }//GEN-LAST:event_refresh_buttonMouseExited

    private void refresh_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refresh_buttonActionPerformed
        // TODO add your handling code here:
    com.cryptoProject.GUIFrames.ImageEnFrame visualCryptographyEncryptFrame = new com.cryptoProject.GUIFrames.ImageEnFrame();
    visualCryptographyEncryptFrame.setVisible(true);
    ImageEnFrame.this.dispose();
    }//GEN-LAST:event_refresh_buttonActionPerformed

    private void uploadImage_butttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadImage_butttonActionPerformed
        // TODO add your handling code here:
        javax.swing.JFileChooser chooseImage = new javax.swing.JFileChooser();
        chooseImage.setCurrentDirectory(new File("user.dir"));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "png", "jpg", "jpeg", "gif");
        chooseImage.addChoosableFileFilter(filter);
        chooseImage.setFileFilter(filter);
        int result = chooseImage.showOpenDialog(null);
        if( result == JFileChooser.APPROVE_OPTION) {
            //Display
            imagePath_label.setText(chooseImage.getSelectedFile().getAbsolutePath());
            ImageIcon unscaledImage = new ImageIcon(chooseImage.getSelectedFile().getAbsolutePath());
            java.awt.Image image1 = unscaledImage.getImage();
            java.awt.Image image2 = image1.getScaledInstance(imageBox_label.getWidth(), imageBox_label.getHeight(), java.awt.Image.SCALE_SMOOTH);
            scaledImage = new ImageIcon( image2 );
            imageBox_label.setText(null);
            imageBox_label.setIcon(scaledImage);
            
            //Work
            imageFile = chooseImage.getSelectedFile();
        }
    }//GEN-LAST:event_uploadImage_butttonActionPerformed
    
    private void uploadImage_butttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadImage_butttonMouseEntered
        // TODO add your handling code here:
        uploadImage_buttton.setIcon(upload_Image_Orange);
    }//GEN-LAST:event_uploadImage_butttonMouseEntered
   
    private void uploadImage_butttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_uploadImage_butttonMouseExited
        // TODO add your handling code here:
        uploadImage_buttton.setIcon(upload_Image_Black);
    }//GEN-LAST:event_uploadImage_butttonMouseExited
  
    private void downloadImage_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadImage_buttonActionPerformed
        // TODO add your handling code here:
        if (encryptImage == null) return;
        JFileChooser saveImage = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.png", "png");
        saveImage.setFileFilter(filter);
        int result = saveImage.showSaveDialog(null); 
        if(  result == JFileChooser.APPROVE_OPTION) {
            File fileName = saveImage.getSelectedFile();
            if( !fileName.toString().endsWith(".png") ) {
                fileName = new File(fileName.toString() + ".png");
            }
            try {
                ImageIO.write(encryptImage, "png", fileName);
            } catch (IOException ex) {
                Logger.getLogger(ImageEnFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_downloadImage_buttonActionPerformed

    private void decryption_labelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_decryption_labelMouseClicked
        // TODO add your handling code here:
        com.cryptoProject.GUIFrames.VisualCryptographyDecryptFrame visualCryptographyDecryptFrame = new com.cryptoProject.GUIFrames.VisualCryptographyDecryptFrame();
        visualCryptographyDecryptFrame.setVisible(true);
        ImageEnFrame.this.dispose();
    }//GEN-LAST:event_decryption_labelMouseClicked

    private void exit_buttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_buttonMouseEntered
        // TODO add your handling code here:
        exit_button.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 5));
    }//GEN-LAST:event_exit_buttonMouseEntered

    private void exit_buttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_buttonMouseExited
        // TODO add your handling code here:
        exit_button.setBorder(null);
    }//GEN-LAST:event_exit_buttonMouseExited
       
/* *
     * //<editor-fold defaultstate="collapsed" desc=" Main meathod ">
        public static void main(String args[]) {
        
        // Look & Feel setting code 
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(FileEnDeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(FileEnDeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(FileEnDeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(FileEnDeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
           }
        //</editor-fold>

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TextEnDeFrame().setVisible(true);
            }
        });
        * 
        * */
//</editor-fold>
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel EnPanel_basePanel;
    private javax.swing.JPanel basePanel_TextEnDe;
    private javax.swing.JLabel cryptFunct_Label;
    private javax.swing.JLabel decryption_label;
    private javax.swing.JButton downloadImage_button;
    private javax.swing.JButton encrypt_button;
    private javax.swing.JLabel encryption_label;
    private javax.swing.JButton exit_button;
    private javax.swing.JButton home_button;
    private javax.swing.JLabel imageBox_label;
    private javax.swing.JLabel imagePath_label;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel path_label;
    private javax.swing.JButton refresh_button;
    private javax.swing.JLabel text_label;
    private javax.swing.JButton uploadImage_buttton;
    // End of variables declaration//GEN-END:variables

    private java.io.File imageFile = null;
    private final java.io.File encryptedFile = null;
    private javax.swing.ImageIcon scaledImage = null;
    private final java.awt.image.BufferedImage encryptImage = null;
    private final java.awt.image.BufferedImage keyImage = null;
    private int size = 0;
    private javax.crypto.SecretKey secretKey = null;
    private javax.crypto.spec.IvParameterSpec IV = null;
}
